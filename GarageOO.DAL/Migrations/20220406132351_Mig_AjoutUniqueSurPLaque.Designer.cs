// <auto-generated />
using GarageOO.DAL;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace GarageOO.DAL.Migrations
{
    [DbContext(typeof(TfGarage))]
    [Migration("20220406132351_Mig_AjoutUniqueSurPLaque")]
    partial class Mig_AjoutUniqueSurPLaque
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.15")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("GarageOO.DAL.Entities.VoitureEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("CapaciteCoffre")
                        .HasColumnType("float");

                    b.Property<string>("Couleur")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Marque")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<int>("NbPortes")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(5);

                    b.Property<int>("NbRoues")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(4);

                    b.Property<int>("NbSiege")
                        .HasColumnType("int");

                    b.Property<string>("Plaque")
                        .IsRequired()
                        .HasMaxLength(9)
                        .HasColumnType("nvarchar(9)");

                    b.HasKey("Id")
                        .HasName("Pk_Voiture");

                    b.HasIndex("Plaque")
                        .IsUnique()
                        .HasDatabaseName("UK_Plaque");

                    b.ToTable("Car");

                    b
                        .HasComment("Nous considérons qu'une voiture ne peut pas avoir plus de 4 roues");

                    b.HasCheckConstraint("Chk_NbRoues", "NbRoues>=2 AND NbRoues<=4");

                    b.HasCheckConstraint("Chk_Portes", "NbPortes>=3 AND NbPortes<=5");

                    b.HasCheckConstraint("Chk_Siege", "NbSiege>=2 AND NbSiege<=8");

                    b.HasCheckConstraint("Chk_PlaqueCD", "UPPER(Plaque) not like 'CD%'");

                    b.HasCheckConstraint("Chk_PlaqueFormat", "Plaque like '_-___-___'");
                });
#pragma warning restore 612, 618
        }
    }
}
